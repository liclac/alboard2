---
- hosts: all
  sudo: yes
  gather_facts: no

  tasks:
    - name: enable apt https transport
      apt: state=present name=apt-transport-https force=yes update_cache=yes

    - name: add nodejs signing key
      apt_key: state=present keyserver=keyserver.ubuntu.com id=68576280

    - name: add nodejs repository
      apt_repository: state=present repo='deb https://deb.nodesource.com/node wheezy main'
      notify: refresh apt cache

    # - name: add nginx signing key
    #   apt_key: state=present keyserver=keyserver.ubuntu.com id=7BD9BF62

    # - name: add nginx repository
    #   apt_repository: state=present repo='deb http://nginx.org/packages/debian/ wheezy nginx'
    #   notify: refresh apt cache

  handlers:
    - name: refresh apt cache
      apt: update_cache=yes



- hosts: all
  sudo: yes
  gather_facts: no

  tasks:
    - name: setup some basic packages
      apt: state=latest update_cache=yes name={{item}}
      with_items:
        - build-essential
        - tmux
        - git
        - vim



    - name: install postgres
      apt: state=latest name={{item}}
      with_items:
        - postgresql
        - postgresql-client
        - libpq-dev

    - name: install psycopg2 for ansible's postgres modules
      apt: state=latest name=python-psycopg2



    # - name: install python build dependencies
    #   apt: state=latest name={{item}}
    #   with_items:
    #     - libbz2-dev
    #     - libreadline-dev
    #     - libsqlite3-dev

    - name: install python + virtualenv (2 for now)
      apt: state=latest name={{item}}
      with_items:
        - python
        - python-dev
        - python-virtualenv

    - name: install nodejs
      apt: state=latest name=nodejs

    - name: install bower
      npm: state=latest name=bower global=yes

    - name: install less
      npm: state=latest name=less global=yes

    - name: install pillow build dependencies
      apt: state=latest name={{item}}
      with_items:
        - libtiff4-dev
        - zlib1g-dev
        - libfreetype6-dev
        - liblcms2-dev
        - libwebp-dev

    - name: install memcached
      apt: state=latest name={{item}}
      with_items:
        - memcached
        - libmemcached-dev

    - name: install redis
      apt: state=latest name=redis-server

    - name: install gettext
      apt: state=latest name=gettext

- hosts: all
  sudo: yes
  sudo_user: postgres
  gather_facts: no

  tasks:
    - name: create the vagrant database user
      postgresql_user: state=present name=vagrant role_attr_flags=SUPERUSER

    - name: create the www-data database user
      postgresql_user: state=present name=vagrant role_attr_flags=SUPERUSER

    - name: create the application database
      postgresql_db: state=present name=alboard2 owner=vagrant

- hosts: all
  sudo: yes
  sudo_user: vagrant
  gather_facts: no

  tasks:
    # - name: install pyenv
    #   command: git clone https://github.com/yyuu/pyenv.git /home/vagrant/.pyenv creates=/home/vagrant/.pyenv

    # - name: install pyenv-virtualenv
    #   command: git clone https://github.com/yyuu/pyenv-virtualenv.git /home/vagrant/.pyenv/plugins/pyenv-virtualenv creates=/home/vagrant/.pyenv/plugins/pyenv-virtualenv

    # - name: add pyenv profile stuff
    #   lineinfile:
    #     line: "{{item}}"
    #     dest: /home/vagrant/.profile
    #   with_items:
    #     - export PYENV_ROOT="$HOME/.pyenv"
    #     - export PATH="$HOME/.pyenv/bin:$PATH"
    #     - eval "$(pyenv init -)"
    #     - eval "$(pyenv virtualenv-init -)"

    # - name: build python 3.4.2
    #   command: bash -lc "pyenv install 3.4.2" creates=/home/vagrant/.pyenv/versions/3.4.2

    # - name: globally activate python 3.4.2
    #   command: bash -lc "pyenv global 3.4.2" creates=/home/vagrant/.pyenv/version



    - name: setup a virtualenv in the source dir
      pip: requirements=/vagrant/requirements.txt virtualenv=/vagrant #virtualenv_command=/home/vagrant/.pyenv/shims/pyvenv

    - name: install bower components
      command: "/bin/bash -c '. bin/activate && alboard2/manage.py bower install' chdir=/vagrant"

    - name: run database migrations
      command: "/bin/bash -c '. bin/activate && alboard2/manage.py migrate' chdir=/vagrant"

    - name: compile translations
      command: "/bin/bash -c '. bin/activate && alboard2/manage.py compilemessages' chdir=/vagrant"
